services:
  rabbit-mq:
    image: rabbitmq:4.0-management
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 3s
      retries: 5

  api-orders:
    build:
      context: .
      dockerfile: ./OrdersService/Dockerfile
    depends_on:
      rabbit-mq:
        condition: service_healthy

  feedback-service:
    build:
      context: FeedbackService
    depends_on:
      - feedback-sql
    ports:
      - "5006:8080"

  gateway:
    build:
      context: .
      dockerfile: ./Gateway/Dockerfile
    ports:
      - "5003:8080"
    depends_on:
      - feedback-service
      - inventory-service
      - api-orders

  inventory-sql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: inventory-sql
    environment:
      SA_PASSWORD: "SuperSafePass.123"
      ACCEPT_EULA: "Y"
    volumes:
      - inventory_data:/var/opt/mssql/data

  feedback-sql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: feedback-sql
    ports:
      - "1434:1433"
    environment:
      SA_PASSWORD: "SuperSafePass.123"
      ACCEPT_EULA: "Y"
    volumes:
      - feedback-volume:/var/opt/mssql

  inventory-service:
    build: InventoryService
    depends_on:
      inventory-sql:
        condition: service_started
      rabbit-mq:
        condition: service_healthy
    environment:
      InventoryService_ConnectionString: "Server=inventory-sql;Database=InventoryDb;User Id=sa;Password=SuperSafePass.123;TrustServerCertificate=True;"
    
  service-a:
    build:
      context: .
      dockerfile: ServiceA/Dockerfile
    depends_on:
      rabbit-mq:
        condition: service_healthy
    

volumes:
  inventory_data: {}
  feedback-volume: {}


